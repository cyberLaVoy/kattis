import queue
# https://github.com/XrXr/KattisSolutions/blob/master/flipfive/main.cc
# https://cpbook.net/methodstosolve
# https://www.hackerearth.com/practice/algorithms/graphs/breadth-first-search/visualize/

counts = {'.........': 0, '**.*.....': 1, '***.*....': 1, '.**..*...': 1, '*..**.*..': 1, '.*.***.*.': 1, '..*.**..*': 1, '...*..**.': 1, '....*.***': 1, '.....*.**': 1, '..***....': 2, '*.**.*...': 2, '.*..*.*..': 2, '*...**.*.': 2, '******..*': 2, '**....**.': 2, '**.**.***': 2, '**.*.*.**': 2, '*...**...': 2, '.***..*..': 2, '*.**.*.*.': 2, '**...*..*': 2, '*****.**.': 2, '***...***': 2, '***.**.**': 2, '*******..': 2, '..***..*.': 2, '.*..*...*': 2, '.***.***.': 2, '.**.*****': 2, '.**....**': 2, '**...***.': 2, '*.**.**.*': 2, '*...*..*.': 2, '*..*...**': 2, '*..******': 2, '.***...**': 2, '.*..***..': 2, '.*.*.**.*': 2, '.*.**...*': 2, '..*******': 2, '..*..***.': 2, '..*.*..*.': 2, '...**...*': 2, '...*.**.*': 2, '....***..': 2, '.*.***...': 3, '*.*...*..': 3, '.**..*.*.': 3, '...*.*..*': 3, '..*.*.**.': 3, '..**..***': 3, '..****.**': 3, '..*.***..': 3, '***.*..*.': 3, '*..**...*': 3, '*.*..***.': 3, '*.*******': 3, '*.**...**': 3, '...*.***.': 3, '.**..**.*': 3, '.*.**..*.': 3, '.*.....**': 3, '.*..*****': 3, '*.*....**': 3, '*..****..': 3, '*....**.*': 3, '*...*...*': 3, '***.*****': 3, '****.***.': 3, '*****..*.': 3, '**..*...*': 3, '**...**.*': 3, '**.****..': 3, '...*.**..': 3, '**.*...*.': 3, '*.*.....*': 3, '*..*****.': 3, '*....****': 3, '*...*..**': 3, '..*.****.': 3, '.*.****.*': 3, '.**....*.': 3, '.****..**': 3, '.***.****': 3, '*..**..**': 3, '*.*..**..': 3, '*.*****.*': 3, '*.**....*': 3, '**.*.****': 3, '**..****.': 3, '**.....*.': 3, '****....*': 3, '*******.*': 3, '***..**..': 3, '*.*...**.': 3, '**.*..*.*': 3, '***.**.*.': 3, '****.*.**': 3, '*****.***': 3, '...*.*.**': 3, '..*.*.*..': 3, '..**..*.*': 3, '..****..*': 3, '.*.**.***': 3, '.*....**.': 3, '.*..**.*.': 3, '.*****..*': 3, '.***..*.*': 3, '.**.*.*..': 3, '***.*.***': 3, '**.*.*...': 3, '**..**..*': 3, '**....*.*': 3, '*.*..*.**': 3, '*.****.*.': 3, '*.**..**.': 3, '*.....*.*': 3, '*...**..*': 3, '*..*.*...': 3, '.**...*.*': 3, '.****.*..': 3, '.***.*...': 3, '.*...*.**': 3, '.*..*.***': 3, '.*.*..**.': 3, '..**.*...': 3, '..***.*..': 3, '..*...*.*': 3, '...***.*.': 3, '**...**..': 4, '.......*.': 4, '.***....*': 4, '.*..****.': 4, '.*.*.****': 4, '.*.**..**': 4, '********.': 4, '*...***.*': 4, '*.**...*.': 4, '*.*.*..**': 4, '*.*..****': 4, '.*..*..**': 4, '.***.**..': 4, '.**.***.*': 4, '.**.....*': 4, '.....****': 4, '...*****.': 4, '...*...*.': 4, '..*.....*': 4, '..*.***.*': 4, '..**.**..': 4, '.***..**.': 4, '......*.*': 4, '..****.*.': 4, '..*..*.**': 4, '..*.*.***': 4, '**...*.**': 4, '*****.*..': 4, '***...*.*': 4, '***.**..*': 4, '*...*.***': 4, '*..*..**.': 4, '*..***.*.': 4, '*.*.**..*': 4, '*.*...*.*': 4, '*.***.*..': 4, '..***.***': 4, '.....*...': 4, '...***..*': 4, '...*..*.*': 4, '.***.*.**': 4, '.**.**.*.': 4, '.**...**.': 4, '.*.*..*.*': 4, '.*.***..*': 4, '.*...*...': 4, '*.**..*.*': 4, '*.*.*.*..': 4, '*.*..*...': 4, '*..*.*.**': 4, '*..**.***': 4, '*.....**.': 4, '***..*...': 4, '***.*.*..': 4, '****..*.*': 4, '**..**.*.': 4, '.*..*.**.': 4, '..***.*.*': 4, '.....*.*.': 4, '...***.**': 4, '...*..***': 4, '******.**': 4, '**....*..': 4, '**.**.*.*': 4, '**.*.*..*': 4, '*.**..***': 4, '*.*.*.**.': 4, '*.*..*.*.': 4, '*..*.*..*': 4, '*..**.*.*': 4, '*.....*..': 4, '......***': 4, '..****...': 4, '..*..*..*': 4, '..*.*.*.*': 4, '.*..**.**': 4, '.*.*.*.*.': 4, '.*.**.**.': 4, '.**.*.*.*': 4, '.**..*..*': 4, '.*****...': 4, '*...*.*.*': 4, '*..*..*..': 4, '*..***...': 4, '*.*.**.**': 4, '*.*...***': 4, '*.***.**.': 4, '**.***...': 4, '**.*..*..': 4, '**..*.*.*': 4, '****.*.*.': 4, '*...*****': 4, '*.**.....': 4, '*.*.*...*': 4, '*.*..**.*': 4, '**.....**': 4, '**.**..*.': 4, '**.*.***.': 4, '***..**.*': 4, '***.*...*': 4, '****.....': 4, '.....**.*': 4, '...****..': 4, '...*.....': 4, '..*....**': 4, '..*.*****': 4, '..**.***.': 4, '.*.*.....': 4, '.*.****..': 4, '.*...**.*': 4, '.****..*.': 4, '*****...*': 4, '***......': 4, '***.***..': 4, '**.******': 4, '**.*...**': 4, '**..*..*.': 4, '*.*.***..': 4, '*.*......': 4, '*.***...*': 4, '*....***.': 4, '.**.*..*.': 4, '.**..***.': 4, '.********': 4, '.*.......': 4, '..**...**': 4, '*..**.**.': 5, '***.*.*.*': 5, '**.*.*.*.': 5, '**..**.**': 5, '**....***': 5, '..*.**.**': 5, '...*..*..': 5, '....*.*.*': 5, '.....*..*': 5, '.**...***': 5, '.****.**.': 5, '.***.*.*.': 5, '.*...*..*': 5, '.*..*.*.*': 5, '.*.*..*..': 5, '**.*..***': 5, '***.**...': 5, '****.*..*': 5, '*****.*.*': 5, '*..***.**': 5, '*....*.*.': 5, '*...*.**.': 5, '*.***.*.*': 5, '*.**.*..*': 5, '*.*.**...': 5, '.*.**.*.*': 5, '.*....*..': 5, '.*..**...': 5, '.*****.**': 5, '.***..***': 5, '.**.*.**.': 5, '....**...': 5, '......*..': 5, '...**.*.*': 5, '..*..*.*.': 5, '.*.******': 5, '.**......': 5, '.****...*': 5, '.***.**.*': 5, '...*...**': 5, '....*..*.': 5, '.....***.': 5, '..**.**.*': 5, '..***...*': 5, '..*......': 5, '**.*.**.*': 5, '**..***..': 5, '**.......': 5, '****...**': 5, '*********': 5, '***..***.': 5, '*........': 5, '*...***..': 5, '*..*.**.*': 5, '*.*.*..*.': 5, '..*.*...*': 5, '..**.....': 5, '..*****..': 5, '....*****': 5, '.......**': 5, '...**..*.': 5, '.******..': 5, '.***.....': 5, '.**.*...*': 5, '.*.*.***.': 5, '*.***..*.': 5, '*.**.***.': 5, '*.*.*****': 5, '*..*.....': 5, '***....**': 5, '.**..****': 5, '.*.**....': 5, '.*......*': 5, '.*..***.*': 5, '..*.*..**': 5, '..**...*.': 5, '..******.': 5, '....***.*': 5, '........*': 5, '...**....': 5, '***.***.*': 5, '****.**..': 5, '*****....': 5, '**..*..**': 5, '**...****': 5, '**.*****.': 5, '*.***....': 5, '*.**.**..': 5, '*.*.***.*': 5, '*..*...*.': 5, '...*....*': 5, '....*....': 5, '.....**..': 5, '..**.****': 5, '..***..**': 5, '..*....*.': 5, '.*...**..': 5, '.*..*....': 5, '.*.*....*': 5, '.**.****.': 5, '*......*.': 5, '*...****.': 5, '*..*.****': 5, '*.*.*....': 5, '**.**..**': 5, '*..***..*': 5, '*....*...': 5, '*...*.*..': 5, '*.***.***': 5, '*.**.*.**': 5, '*.*.**.*.': 5, '**..*.*..': 5, '**...*...': 5, '**.***..*': 5, '***...**.': 5, '....**.*.': 5, '......**.': 5, '...**.***': 5, '..*..*...': 5, '.*.*.*.**': 5, '****..**.': 5, '******.*.': 5, '***..*.**': 5, '**.**.*..': 5, '*.*.*.***': 5, '.**.**..*': 5, '*.**.****': 6, '*...*....': 6, '*..*....*': 6, '*..****.*': 6, '*****..**': 6, '***....*.': 6, '***.****.': 6, '**.****.*': 6, '**.*....*': 6, '**..*....': 6, '..*****.*': 6, '..*..**..': 6, '..*.*....': 6, '...**..**': 6, '...*.****': 6, '....****.': 6, '.**.*....': 6, '.**..**..': 6, '.******.*': 6, '.*.....*.': 6, '**......*': 6, '**.**....': 6, '**.*.**..': 6, '***..****': 6, '***.*..**': 6, '****...*.': 6, '*..*.**..': 6, '*..**....': 6, '*.......*': 6, '*.******.': 6, '.*.*...*.': 6, '.*.*****.': 6, '.*...****': 6, '.****....': 6, '....*..**': 6, '.*..**..*': 6, '.*.*.*...': 6, '.*.**.*..': 6, '.**.*.***': 6, '.**..*.**': 6, '.*****.*.': 6, '...**.*..': 6, '...*.*...': 6, '....**..*': 6, '..**..**.': 6, '**.***.*.': 6, '**.*..**.': 6, '**..*.***': 6, '****.*...': 6, '*....*.**': 6, '..*...**.': 6, '..*.**.*.': 6, '..**.*.**': 6, '....*.*..': 6, '.****.***': 6, '*.****..*': 6, '.***.*..*': 6, '.**.**...': 6, '.**...*..': 6, '.*.*..***': 6, '.*.***.**': 6, '.*...*.*.': 6, '..*...*..': 6, '..*.**...': 6, '..**.*..*': 6, '....*.**.': 6, '***..*.*.': 6, '***.*.**.': 6, '****..***': 6, '**..**...': 6, '*.****.**': 6, '...**.**.': 6, '...*.*.*.': 6, '....**.**': 6, '..**..*..': 6, '.*....***': 6, '*....*..*': 6, '*..*.***.': 6, '*..**..*.': 6, '*......**': 6, '*.*****..': 6, '**..*****': 6, '....*...*': 6, '****.**.*': 6, '*.*..*..*': 7, '*.****...': 7, '*.**..*..': 7, '*.....***': 7, '*...**.**': 7, '*..*.*.*.': 7, '****..*..': 7, '******...': 7, '***..*..*': 7, '**.**.**.': 7, '..**.*.*.': 7, '..***.**.': 7, '..*...***': 7, '...***...': 7, '.**.**.**': 7, '**..*.**.': 7, '**...*.*.': 7, '**.***.**': 7, '***...*..': 7, '*..*..***': 7, '.*.*.*..*': 7, '.*...***.': 7, '.*..*..*.': 7, '.*.*...**': 7, '.**.***..': 7, '...******': 7, '**.**...*': 7, '..*..**.*': 7, '.*******.': 7, '.***...*.': 7, '.**.*..**': 7, '.*.*.**..': 7, '..*..****': 7, '***.....*': 7, '...****.*': 7, '*..*..*.*': 7, '*.*.****.': 8, '*.*....*.': 8, '*.***..**': 8, '*....**..': 8, '****.****': 8, '..**....*': 8, '**..***.*': 8, '.*....*.*': 8, '.****.*.*': 8, '*.*.*.*.*': 9}

def boardToString(board):
    string = ""
    for i in range(3):
        for j in range(3):
            string += board[i][j]
    return string
def stringToBoard(string):
    board = []
    for i in range(3):
        row = []
        for j in range(3):
            row.append(string[3*i+j])
        board.append(row)
    return board
def validCell(row, col):
    if row >= 0 and col >= 0 and row < 3 and col < 3:
        return True
    return False
def flip(symbol):
    if symbol == '.':
        return '*'
    return '.'
def click(board, row, col):
    board = stringToBoard(board)
    board[row][col] = flip(board[row][col])
    if validCell(row+1, col):
        board[row+1][col] = flip(board[row+1][col])
    if validCell(row-1, col):
        board[row-1][col] = flip(board[row-1][col])
    if validCell(row, col+1):
        board[row][col+1] = flip(board[row][col+1])
    if validCell(row, col-1):
        board[row][col-1] = flip(board[row][col-1])
    return boardToString(board)
def bfs(counts):
    q = queue.Queue() # FIFO queue
    current = ["."*9, 0]
    q.put(current)
    while not q.empty():
        current = q.get()
        if ( current[0] not in counts): # if is the first occurence of layout
            counts[current[0]] = current[1] # log the layout and number of clicks to get there
            # search over all children; you must ask: what does the children of a parent node look like?
            for row in range(3):
                for col in range(3):
                    result = click(current[0], row, col) # the result of clicking on any one tile, given the current layout
                    if result not in counts: # if child was not found previously
                        q.put([result, current[1]+1]) # place child in queue to be processed later

def generateCounts():
    counts = {}
    bfs(counts)
    print(counts)

def solve():
    numBoards = int(input())
    for i in range(numBoards):
        layout = ""
        for j in range(3):
            layout += input()
        print(counts[layout])

def main():
    #generateCounts()
    solve()
main()